generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id          String   @id @default(cuid())
  name        String
  description String?
  address     String
  phone       String?
  website     String?
  imageUrl    String?
  rating      Float    @default(0)
  priceRange  String   // $, $$, $$$, $$$$
  isOpen      Boolean  @default(true)
  applyDiscount    Boolean  @default(false)    // Nou: dacă se aplică discount
  discountPercentage Float? // Nou: procentul de discount (opțional)
  isAcceptedMealTickets Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  categories  RestaurantCategory[]
  reviews     Review[]
  
  @@map("restaurants")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  slug        String   @unique
  description String?
  icon        String?
  createdAt   DateTime @default(now())
  
  // Relations
  restaurants RestaurantCategory[]
  
  @@map("categories")
}

model RestaurantCategory {
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  restaurantId String
  category     Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId   String
  
  @@id([restaurantId, categoryId])
  @@map("restaurant_categories")
}

model Review {
  id           String     @id @default(cuid())
  rating       Int        // 1-5
  comment      String?
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
  restaurantId String
  createdAt    DateTime   @default(now())
  
  @@map("reviews")
}
